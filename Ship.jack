class Ship {
    field int x, y;
    field MonsterController monsterController;

    constructor Ship new(int Ax, int Ay, MonsterController monsterController1) {
        let x = Ax;
        let y = Ay;
        let monsterController = monsterController1;
        do draw();
        return this;
    }

    method void draw() {
        do Screen.setColor(true);
        do Screen.drawPixel(x + 12, y);
        do Screen.drawPixel(x + 13, y);
        do Screen.drawPixel(x + 18, y);
        do Screen.drawPixel(x + 19, y);
        do Screen.drawPixel(x + 12, y + 1);
        do Screen.drawPixel(x + 13, y + 1);
        do Screen.drawPixel(x + 18, y + 1);
        do Screen.drawPixel(x + 19, y + 1);
        do Screen.drawLine(x + 10, y + 2, x + 21, y + 2);
        do Screen.drawLine(x + 10, y + 3, x + 21, y + 3);
        do Screen.drawLine(x + 8, y + 4, x + 23, y + 4);
        do Screen.drawLine(x + 8, y + 5, x + 23, y + 5);
        do Screen.drawLine(x + 8, y + 6, x + 23, y + 6);
        do Screen.drawLine(x + 8, y + 7, x + 23, y + 7);
        do Screen.drawLine(x + 6, y + 8, x + 25, y + 8);
        do Screen.drawLine(x + 6, y + 9, x + 25, y + 9);
        do Screen.drawLine(x + 4, y + 10, x + 27, y + 10);
        do Screen.drawLine(x + 4, y + 11, x + 27, y + 11);
        do Screen.drawLine(x + 2, y + 12, x + 29, y + 12);
        do Screen.drawLine(x + 2, y + 13, x + 29, y + 13);
        do Screen.drawLine(x + 4, y + 14, x + 27, y + 14);
        do Screen.drawLine(x + 4, y + 15, x + 27, y + 15);
        do Screen.drawLine(x + 6, y + 16, x + 25, y + 16);
        do Screen.drawLine(x + 6, y + 17, x + 25, y + 17);
        do Screen.drawLine(x + 8, y + 18, x + 23, y + 18);
        do Screen.drawLine(x + 8, y + 19, x + 23, y + 19);
        do Screen.setColor(false);
        do Screen.drawPixel(x + 12, y + 8);
        do Screen.drawPixel(x + 13, y + 8);
        do Screen.drawPixel(x + 18, y + 8);
        do Screen.drawPixel(x + 19, y + 8);
        do Screen.drawLine(x + 12, y + 9, x + 19, y + 9);
        do Screen.drawLine(x + 10, y + 14, x + 21, y + 14);
        do Screen.drawPixel(x + 14, y + 16);
        do Screen.drawPixel(x + 15, y + 16);
        do Screen.drawPixel(x + 14, y + 17);
        do Screen.drawPixel(x + 15, y + 17);
        do Screen.drawPixel(x + 10, y + 18);
        do Screen.drawPixel(x + 11, y + 18);
        do Screen.drawPixel(x + 20, y + 18);
        do Screen.drawPixel(x + 21, y + 18);
        do Screen.drawRectangle(x + 8, y + 20, x + 13, y + 21);
        do Screen.drawRectangle(x + 18, y + 20, x + 23, y + 21);
        do Screen.drawPixel(x + 10, y + 24);
        do Screen.drawPixel(x + 11, y + 24);
        do Screen.drawPixel(x + 14, y + 24);
        do Screen.drawPixel(x + 15, y + 24);
        do Screen.drawPixel(x + 18, y + 24);
        do Screen.drawPixel(x + 19, y + 24);
        do Screen.drawRectangle(x + 14, y + 28, x + 15, y + 29);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + 31, y + 31);
        return;
    }

    method void moveLeft() {
        if (x > 0) {
            do erase();
            let x = x - 2;
            do draw();
        }
        return;
    }

    method void moveRight() {
        if (x < 479) {
            do erase();
            let x = x + 2;
            do draw();
        }
        return;
    }


    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method void Shoot(){
        var int index;
        var Monster curentMonster;
        var Monster shootedMonster;
        var boolean monsterIsFound;
        var Bullet bullet;
        var int indexOfMonster;
        let shootedMonster = Monster.new(-1, -1);
        let indexOfMonster = -1;
        let monsterIsFound = false;
        while(index < 20){
            let curentMonster = monsterController.GetMonser(index);
            if((curentMonster.GetX() < x) & (x < curentMonster.GetX() + 32) & ~(monsterIsFound)){
                let shootedMonster = curentMonster;
                let indexOfMonster = index;
                let monsterIsFound = true;
            }

            let index = index + 1;
        }

        let bullet = Bullet.new(x + 15, shootedMonster);
        do bullet.fly();
        
        if (~(indexOfMonster = -1)){ do monsterController.DeleteMonster(indexOfMonster); }
        return;
    }
}