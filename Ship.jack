class Ship {
    field int shipX, shipY;
    field MonsterController shipMonsterController;

    constructor Ship new(int Ax, int Ay, MonsterController monsterController1) {
        let shipX = Ax;
        let shipY = Ay;
        let shipMonsterController = monsterController1;
        do draw();
        return this;
    }

    method void draw() {
        do Screen.setColor(true);
        do Screen.drawPixel(shipX + 12, shipY);
        do Screen.drawPixel(shipX + 13, shipY);
        do Screen.drawPixel(shipX + 18, shipY);
        do Screen.drawPixel(shipX + 19, shipY);
        do Screen.drawPixel(shipX + 12, shipY + 1);
        do Screen.drawPixel(shipX + 13, shipY + 1);
        do Screen.drawPixel(shipX + 18, shipY + 1);
        do Screen.drawPixel(shipX + 19, shipY + 1);
        do Screen.drawLine(shipX + 10, shipY + 2, shipX + 21, shipY + 2);
        do Screen.drawLine(shipX + 10, shipY + 3, shipX + 21, shipY + 3);
        do Screen.drawLine(shipX + 8, shipY + 4, shipX + 23, shipY + 4);
        do Screen.drawLine(shipX + 8, shipY + 5, shipX + 23, shipY + 5);
        do Screen.drawLine(shipX + 8, shipY + 6, shipX + 23, shipY + 6);
        do Screen.drawLine(shipX + 8, shipY + 7, shipX + 23, shipY + 7);
        do Screen.drawLine(shipX + 6, shipY + 8, shipX + 25, shipY + 8);
        do Screen.drawLine(shipX + 6, shipY + 9, shipX + 25, shipY + 9);
        do Screen.drawLine(shipX + 4, shipY + 10, shipX + 27, shipY + 10);
        do Screen.drawLine(shipX + 4, shipY + 11, shipX + 27, shipY + 11);
        do Screen.drawLine(shipX + 2, shipY + 12, shipX + 29, shipY + 12);
        do Screen.drawLine(shipX + 2, shipY + 13, shipX + 29, shipY + 13);
        do Screen.drawLine(shipX + 4, shipY + 14, shipX + 27, shipY + 14);
        do Screen.drawLine(shipX + 4, shipY + 15, shipX + 27, shipY + 15);
        do Screen.drawLine(shipX + 6, shipY + 16, shipX + 25, shipY + 16);
        do Screen.drawLine(shipX + 6, shipY + 17, shipX + 25, shipY + 17);
        do Screen.drawLine(shipX + 8, shipY + 18, shipX + 23, shipY + 18);
        do Screen.drawLine(shipX + 8, shipY + 19, shipX + 23, shipY + 19);
        do Screen.setColor(false);
        do Screen.drawPixel(shipX + 12, shipY + 8);
        do Screen.drawPixel(shipX + 13, shipY + 8);
        do Screen.drawPixel(shipX + 18, shipY + 8);
        do Screen.drawPixel(shipX + 19, shipY + 8);
        do Screen.drawLine(shipX + 12, shipY + 9, shipX + 19, shipY + 9);
        do Screen.drawLine(shipX + 10, shipY + 14, shipX + 21, shipY + 14);
        do Screen.drawPixel(shipX + 14, shipY + 16);
        do Screen.drawPixel(shipX + 15, shipY + 16);
        do Screen.drawPixel(shipX + 14, shipY + 17);
        do Screen.drawPixel(shipX + 15, shipY + 17);
        do Screen.drawPixel(shipX + 10, shipY + 18);
        do Screen.drawPixel(shipX + 11, shipY + 18);
        do Screen.drawPixel(shipX + 20, shipY + 18);
        do Screen.drawPixel(shipX + 21, shipY + 18);
        do Screen.drawRectangle(shipX + 8, shipY + 20, shipX + 13, shipY + 21);
        do Screen.drawRectangle(shipX + 18, shipY + 20, shipX + 23, shipY + 21);
        do Screen.drawPixel(shipX + 10, shipY + 24);
        do Screen.drawPixel(shipX + 11, shipY + 24);
        do Screen.drawPixel(shipX + 14, shipY + 24);
        do Screen.drawPixel(shipX + 15, shipY + 24);
        do Screen.drawPixel(shipX + 18, shipY + 24);
        do Screen.drawPixel(shipX + 19, shipY + 24);
        do Screen.drawRectangle(shipX + 14, shipY + 28, shipX + 15, shipY + 29);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(shipX, shipY, shipX + 31, shipY + 31);
        return;
    }

    method void moveLeft() {
        if (shipX > 0) {
            do erase();
            let shipX = shipX - 2;
            do draw();
        }
        return;
    }

    method void moveRight() {
        if (shipX < 479) {
            do erase();
            let shipX = shipX + 2;
            do draw();
        }
        return;
    }


    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method void Shoot(){
        var int shipIndex;
        var Monster shipCurentMonster;
        var Monster shootedMonster;
        var boolean shipMonsterIsFound;
        var Bullet shipBullet;
        var int shipIndexOfMonster;
        let shipIndex = 0;
        let shootedMonster = Monster.new(-1, -1);
        let shipIndexOfMonster = -1;
        let shipMonsterIsFound = false;
        while(shipIndex < 30){
            let shipCurentMonster = shipMonsterController.GetMonser(shipIndex);
            if(~(shipMonsterIsFound)){
                if (shipCurentMonster.GetX() - 1 < shipX + 16){
                    if (shipX + 14 < shipCurentMonster.GetX() + 33){
                        let shootedMonster = shipCurentMonster;
                        let shipIndexOfMonster = shipIndex;
                        let shipMonsterIsFound = true;
                    }
                }
            }

            let shipIndex = shipIndex + 1;
        }

        let shipBullet = Bullet.new(shipX + 15, shootedMonster);
        do shipBullet.fly();
        
        if (~(shipIndexOfMonster = -1)){ 
            do shipMonsterController.DeleteMonster(shipIndexOfMonster);
            do shootedMonster.dispose();
        }
        return;
    }
}