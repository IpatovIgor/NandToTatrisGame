class Interface{
    field String startMessage;
    field String winMessage;
    field String loseMessage;
    field String firstLevel;
    field String secondLevel;
    field String thirdLevel;
    constructor Interface new(){
        let startMessage = "Press Enter to start";
        let winMessage = "You won!";
        let loseMessage = "Loser";
        let firstLevel = "First Level";
        
        let secondLevel = "Second Level";
        let thirdLevel = "Third Level";
        return this;
    }

    method void PrintScore(GameCounter counter){
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do Output.moveCursor(10, 29);
        do Output.printString(winMessage);
        do Output.moveCursor(12, 30);
        do Output.printInt(counter.GetScore());
        return;
    }

    method void drawFirstLevel(){
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do Output.moveCursor(12, 28);
        do Output.printString(firstLevel);
        do Sys.wait(1000);
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        return;
    }

    method void drawSecondLevel(){
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do Output.moveCursor(12, 26);
        do Output.printString(secondLevel);
        do Sys.wait(1000);
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        return;
    }

    method void drawThirdLevel(){
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do Output.moveCursor(12, 26);
        do Output.printString(thirdLevel);
        do Sys.wait(1000);
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        return;
    }

    method void drawLostString(){
        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        do Output.moveCursor(12, 26);
        do Output.printString(loseMessage);
        do Sys.wait(1000);
        return;
    }
    
    method void drawStartString(){
        var char key;
        var boolean entrPressed;

        do Output.moveCursor(12, 20);
        do Output.printString(startMessage);

        let entrPressed = false;
        while(~entrPressed){
            let key = Keyboard.keyPressed();
            if (key = 128) { let entrPressed = true; }
        }

        do Screen.setColor(false);
        do Screen.drawRectangle(0, 0, 511, 255);
        return;
   }
}